@using ScrewItBackEnd.Entities
@using System.Security.Claims
@model List<Product>?
@{
    ViewData["Title"] = "Home Page";
}

<style>
    #main-home-page{
        display: flex; 
        align-items: center;
        flex-direction: column;
    }
    
    #search {
        margin-top: 20px;
        height:30px;
        font-size: 15px;
        width: 75vw;
        display: flex;
        justify-content: center;
        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
        align-items: center;
        border: 2px solid white;
        border-radius: 5px;
        background-color: rgba(0, 0, 0, 0.242);
        color : white;
    }

    .product-list {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 20px;
        width:92vw;
        margin-top: 30px;
    }

    .product-card {
        width: 300px;
        text-align: center;
        padding: 15px;
        border-radius: 5px;
        background-color: #f8f9fa;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
    }
    #image{
        width: 200px;
        height: 200px;
    }
    .details{
    }
    .line{
        width:92%;
        color: grey;
    }
    #suggestionsBox {
    border: 1px solid #ccc;
    max-height: 200px;
    background-color: white;
    width: 75vw;
    z-index: 3;
    border-radius: 2px;
    display: none;
}

.suggestionItem {
    padding: 8px;
    cursor: pointer;
}

.suggestionItem:hover {
    background-color: #f0f0f0;
}
</style>

<div id="main-home-page">
    <input type="text" id="search" placeholder="Search for products..." autocomplete="off" />
    <div id="suggestionsBox"></div>

    <h2>All products</h2>
    @if(Model == null || Model.Any() == false) {
        <h3>No products Uploaded Yet :(</h3>
    }
    else {
        <div class="product-list">
            @foreach (var product in Model)
            {
                
                <div class="product-card" onclick="window.location.href='@Url.Action("Details", "Product", new { id = product.Id })';" style="cursor: pointer;">
                    <img id="image" src="@product.PictureUrl" />
                    <hr class="line">
                    <div class="details">
                        <p><strong>Name:</strong> @product.Name</p>
                        <p><strong>Description:</strong> @product.Description</p>
                        <p><strong>Price:</strong> $@product.Price</p>
                    </div>
                    @if( base.User != null && product.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier)){
                        <div style="display: flex; flex-direction:row; justify-content:  space-between;">
                            <a href="/Product/Edit/@product.Id" class="btn btn-secondary mt-3">Change</a>
                            <button class="btn btn-danger" onclick="deleteProduct(@product.Id,'@product.UserId')">Delete</button>
                        </div>
                    }else{
                        <a href="/Cart/Add/@product.Id" class="btn btn-secondary mt-3">Add To Cart</a>
                    }
                </div>
            }
        </div>
    }
</div>

<script>
    $(document).ready(function() {
    $("#search").on("input", function() {
        var query = $(this).val();

        if (query.length >= 2) {
            $.ajax({
                url: '/Product/GetSearchSuggestions', 
                type: 'GET',
                data: { searchTerm: query },
                success: function(data) {
                    var suggestions = data;
                    var suggestionsBox = $("#suggestionsBox");
                    suggestionsBox.empty();
                    if (suggestions.length > 0) {
                        suggestionsBox.show();
                        suggestions.forEach(function(item) {
                            console.log(item.name)
                            suggestionsBox.append(`<a href = "/Product/Details/${item.id}"><div class="suggestionItem" >` + item.name + '</div></a>');
                        });

                        // Click event for suggestion
                        $(".suggestionItem").on("click", function() {
                            $("#searchBox").val($(this).text());
                            suggestionsBox.hide();
                        });
                    } else {
                        suggestionsBox.hide();
                    }
                }
            });
        } else {
            $("#suggestionsBox").hide();
        }
    });

    $(document).click(function(event) {
        if (!$(event.target).closest('#searchBox, #suggestionsBox').length) {
            $('#suggestionsBox').hide();
        }
    });
});
    async function deleteProduct(productId, userId) {

    try {
        const response = await fetch(`http://127.0.0.1:5001/Product/Delete/${productId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ userId: userId })
        });

        if (response.ok) {
            document.getElementById('row').remove();
        } else {
            const error = await response.text();
            console.error("Failed to delete:", error);
        }
    } catch (error) {
        console.error("Request failed", error);
    }
}

    </script >

