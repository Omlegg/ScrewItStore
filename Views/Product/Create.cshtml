@using ScrewItBackEnd.Dtos
@using ScrewItBackEnd.Entities
@model ProductDtoForPic
@{
    List<ProductCategories> categories = new List<ProductCategories>((ProductCategories[])Enum.GetValues(typeof(ProductCategories))); 
    IEnumerable<ValidationResponse>? validationErrors = null;
    var validationErrorsObject = base.ViewData["validation_errors"];
    Console.WriteLine(validationErrorsObject);
    if(validationErrorsObject is IEnumerable<ValidationResponse>) {
        validationErrors = validationErrorsObject as IEnumerable<ValidationResponse>;
        
    }
}




<style>
  .form-column {
        margin-bottom: 1.5rem;
        max-width: 400px;
        margin: 0 auto;
    }

    .create-form-label {
        font-size: 1.2rem;
        font-weight: bold;
        color: #333;
        margin-bottom: 0.5rem;
        display: block;
    }

    .create-form-input {
        width: 100%;
        padding: 10px;
        border: 2px solid #ddd;
        border-radius: 8px;
        font-size: 1rem;
        color: #333;
        background-color: #f9f9f9;
        transition: all 0.3s ease;
        resize: none;
    }

    .create-form-input:focus {
        outline: none;
        border-color: #0056b3;
        background-color: #fff;
    }

    .create-form-input option {
        padding: 10px;
    }

    .create-form-input:hover {
        border-color: #007bff;
    }
    a.navbar-brand {
  white-space: normal;
  text-align: center;
  word-break: break-all;
}

a {
  color: #0077cc;
}

.btn-primary {
  color: #fff;
  background-color: #1b6ec2;
  border-color: #1861ac;
}

.nav-pills .nav-link.active, .nav-pills .show > .nav-link {
  color: #fff;
  background-color: #1b6ec2;
  border-color: #1861ac;
}

.border-top {
  border-top: 1px solid #e5e5e5;
}
.border-bottom {
  border-bottom: 1px solid #e5e5e5;
}

.box-shadow {
  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);
}

button.accept-policy {
  font-size: 1rem;
  line-height: inherit;
}

.footer {
  position: absolute;
  bottom: 0;
  width: 100%;
  white-space: nowrap;
  line-height: 60px;
}

#form-create {
  width: 400px;
  margin: 50px auto;
  padding: 30px;
  background-color: #f8f8f8;
  border-radius: 12px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

#create-form {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

#create-form-column {
  display: flex;
  flex-direction: column;
}

.create-form-label {
  font-size: 16px;
  font-weight: 600;
  margin-bottom: 5px;
  color: #333;
}
.create-form-input {
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 8px;
  font-size: 14px;
  transition: border-color 0.3s ease;
}

.create-form-input:focus {
  border-color: #007bff;
  outline: none;
}

#form-create button {
  margin-top: 20px;
  padding: 12px;
  width: 100%;
  background-color: #007bff;
  color: white;
  font-size: 16px;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

#form-create button:hover {
  background-color: #0056b3;
}
</style>

@if(validationErrors != null) {

    <ul>
        @foreach(var validationErrorItem in validationErrors) {
            <li>
                <span>@validationErrorItem.Message</span>
            </li>
        }
    </ul>
}

<div id="main-home-page">
    <form id="form-create" method="post" action="/Product/Create" enctype="multipart/form-data">
        <div asp-validation-summary="All"></div>
        <div id="create-form">
            <div id="create-form-column">
                <label class="create-form-label" for="Name">Product's Name</label>
                <input class="create-form-input" id="Name" name="Name" type="text" placeholder="Enter your product's name" required />
            </div>

            <div id="create-form-column">
                <label class="create-form-label" for="Price">Product's Price</label>
                <input class="create-form-input" id="Price" name="Price" type="number" step="0.01" placeholder="Enter your product's price" required />
            </div>

            <div id="create-form-column">
                <label class="create-form-label" for="Description">Product's Description</label>
                <textarea class="create-form-input" id="Description" name="Description" placeholder="Enter your product's description" required></textarea>
            </div>
          <div id="create-form-column">
              <label class="form-label" for="ProductPicture">Picture</label>
              <input type="file" class="form-control" id="ProductPicture" name="ProductPicture" required />
              <div id="image-preview-container" style="margin-top:10px;">
                  <img id="image-preview" style="max-width: 100%; height: auto; display: none; border: 1px solid #ccc; padding: 10px;" />
              </div>
           </div>

            <div id="create-form-column">
                <label class="create-form-label" for="CategoryId">Select Product Categories</label>
                <select class="create-form-input" id="CategoryId" name="CategoryId" multiple required>
                    @foreach (var category in categories)
                    {
                        <option value="@Convert.ToInt32(category)">@category</option>
                    }
                </select>
            </div>
            
          <button type="submit">Create</button>
        </div>
      </form>
    </div>

    @section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}

<script>
document.getElementById('ProductPicture').addEventListener('change', function(event) {
    const preview = document.getElementById('image-preview');
    const file = event.target.files[0];

    if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
            preview.src = e.target.result;
            preview.style.display = 'block'; // Show the image
        };
        reader.readAsDataURL(file);
    } else {
        preview.src = '';
        preview.style.display = 'none'; // Hide if no file
    }
});
</script>